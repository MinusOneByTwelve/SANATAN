#!/bin/bash

set -e

clear

CURRENTUSER=$(whoami)
sudo rm -rf /home/$CURRENTUSER/.ssh/known_hosts
sudo rm -rf /root/.ssh/known_hosts
sudo rm -rf /root/.bash_history
sudo rm -rf /home/$CURRENTUSER/.bash_history

RED='\033[0;31m'
NC='\033[0m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
LBLUE='\033[1;34m'
DGRAY='\033[1;35m'
PURPLE='\033[0;35m'
RGRAY='\033[1;30m'
BOLD=$(tput bold)
NORM=$(tput sgr0)
ORANGE='\033[1;33m'

DoubleQuotes='"'
NoQuotes=''

USERINTERACTION="YES"
USERVALS=""
THENODELISTFILE="THEENCNODELISTFILE"

BASE="/opt/Matsya"
sudo mkdir -p $BASE
sudo mkdir -p $BASE/tmp
sudo mkdir -p $BASE/Scripts
sudo mkdir -p $BASE/Secrets
sudo mkdir -p $BASE/Resources
sudo mkdir -p $BASE/Output

source $BASE/Resources/StackVersioningAndMisc

if [ "$#" -ne 1 ]; then
	USERVALS=""
else
	USERVALS=$1
	USERINTERACTION="NO"
	IFS='├' read -r -a USERLISTVALS <<< $USERVALS
	SECRETTHEKEY="${USERLISTVALS[0]}"
	THENODECHOICE="${USERLISTVALS[1]}"
	NODEREQNUMBER="0"
fi

if [ "$USERINTERACTION" == "YES" ] || [ "$USERINTERACTION" == "yes" ] ; then
	echo -e "${ORANGE}=============================================================${NC}"
	echo -e "\x1b[1;34mV\x1b[mersatile \x1b[1;34mA\x1b[mutomation \x1b[1;34mM\x1b[managing \x1b[1;34mA\x1b[mssorted \x1b[1;34mN\x1b[metworked \x1b[1;34mA\x1b[mpplications"
	echo -e "${GREEN}=============================================================${NC}"
	echo ''
	echo -e "\x1b[3mV   V  AAAAA  M   M  AAAAA  N   N  AAAAA\x1b[m"
	echo -e "\x1b[3mV   V  A   A  MM MM  A   A  NN  N  A   A\x1b[m"
	echo -e "\x1b[3mV   V  AAAAA  M M M  AAAAA  N N N  AAAAA\x1b[m"
	echo -e "\x1b[3m V V   A   A  M   M  A   A  N  NN  A   A\x1b[m"
	echo -e "\x1b[3m  V    A   A  M   M  A   A  N   N  A   A\x1b[m"
	echo ''
	echo -e "\x1b[3m\x1b[4mSTACK CONNECT\x1b[m"
	echo ''
fi

if [ "$USERINTERACTION" == "YES" ] || [ "$USERINTERACTION" == "yes" ] ; then
	read -s -p "Key 				> " -e -i "" SECRETTHEKEY
	echo ''
	echo ''		
fi

ALLREQNODES=()

TEMPRANDOMFILE=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 15 | head -n 1)
$BASE/Scripts/SecretsFile-Decrypter "$THENODELISTFILE├1├1├$BASE/tmp/$TEMPRANDOMFILE├$SECRETTHEKEY"
LINES=$(cat $BASE/tmp/$TEMPRANDOMFILE)
for LINE in $LINES; do
	ALLREQNODES+=("$LINE")				
done	
sudo rm -rf $BASE/tmp/$TEMPRANDOMFILE

echo "$STACKLINELENGTHY"
TempXCounter=1
for EACHXNODE in "${ALLREQNODES[@]}"
do
	IFS='├' read -r -a _EACHXNODE <<< $EACHXNODE
	IXP="${_EACHXNODE[0]}"
	NAXME="${_EACHXNODE[1]}"
	NM="${_EACHXNODE[9]}"
	
	if [ "$USERINTERACTION" == "NO" ] || [ "$USERINTERACTION" == "no" ] ; then
		if [ "$THENODECHOICE" == "$IXP" ] || [ "$THENODECHOICE" == "$NAXME" ] || [ "$THENODECHOICE" == "$NM" ] ; then
			NODEREQNUMBER="$TempXCounter"
		fi	
	fi
		
	if [ "$USERINTERACTION" == "YES" ] || [ "$USERINTERACTION" == "yes" ] ; then	
		if (( TempXCounter < 10 )) ; then
			echo "(0$TempXCounter) $NM ($IXP)"
		else
			echo "($TempXCounter) $NM ($IXP)"
		fi
	fi
	
	TempXCounter=$((TempXCounter + 1))	
done
echo "$STACKLINELENGTHY"

if [ "$USERINTERACTION" == "YES" ] || [ "$USERINTERACTION" == "yes" ] ; then
	echo ""	
	read -p "Enter Node Number		> " -e -i "0" NODEREQNUMBER
fi

if [ "$NODEREQNUMBER" == "0" ] ; then
	exit
else
	TempXCounter=1
	for EACHXNODE in "${ALLREQNODES[@]}"
	do
		IFS='├' read -r -a EACHSPLITNODE <<< $EACHXNODE
		IP="${EACHSPLITNODE[0]}"
		PORT="${EACHSPLITNODE[2]}"
		UN="${EACHSPLITNODE[3]}"
		PW="${EACHSPLITNODE[4]}"
		NM="${EACHSPLITNODE[9]}"
				
		if (( TempXCounter == NODEREQNUMBER )) ; then
			clear
			echo -e "${RED}==============================================================================${NC}"
			echo -e "${RED}${BOLD}		$NM ($IP)${NORM}${NC}"
			echo -e "${RED}==============================================================================${NC}"
			echo ''			
			sshpass -p "$PW" ssh -o ConnectTimeout=15 $UN@$IP -p $PORT -o "StrictHostKeyChecking=no"
		fi
								
		TempXCounter=$((TempXCounter + 1))	
	done
fi

sudo rm -rf /root/.bash_history
sudo rm -rf /home/$CURRENTUSER/.bash_history

