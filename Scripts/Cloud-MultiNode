#!/bin/bash

set -e

clear

CURRENTUSER=$(whoami)
sudo rm -rf /home/$CURRENTUSER/.ssh/known_hosts
sudo rm -rf /root/.ssh/known_hosts

RED='\033[0;31m'
NC='\033[0m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
LBLUE='\033[1;34m'
DGRAY='\033[1;35m'
PURPLE='\033[0;35m'
RGRAY='\033[1;30m'
BOLD=$(tput bold)
NORM=$(tput sgr0)
ORANGE='\033[1;33m'

DoubleQuotes='"'
NoQuotes=''

USERINTERACTION="YES"
USERVALS=""
MANUALRUN="NO"

BASE="/opt/Matsya"
sudo mkdir -p $BASE
sudo mkdir -p $BASE/tmp
sudo mkdir -p $BASE/Scripts
sudo mkdir -p $BASE/Secrets
sudo mkdir -p $BASE/Resources
sudo mkdir -p $BASE/Output

source $BASE/Resources/StackVersioningAndMisc

echo -e "${ORANGE}==========================================================${NC}"
echo -e "${BLUE}${BOLD}\x1b[4mM${NORM}${NC}odular ${BLUE}${BOLD}\x1b[4mA${NORM}${NC}malgamation ${BLUE}${BOLD}\x1b[4mT${NORM}${NC}ransforming ${BLUE}${BOLD}\x1b[4mS${NORM}${NC}ystems ${BLUE}${BOLD}\x1b[4mY${NORM}${NC}ielding ${BLUE}${BOLD}\x1b[4mA${NORM}${NC}gility"
echo -e "${GREEN}==========================================================${NC}"
echo ''
echo -e "\x1b[3mM   M  AAAAA  TTTTT  SSS   Y   Y  AAAAA\x1b[m"
echo -e "\x1b[3mMM MM  A   A    T   S        Y    A   A\x1b[m"
echo -e "\x1b[3mM M M  AAAAA    T    SSS     Y    AAAAA\x1b[m"
echo -e "\x1b[3mM   M  A   A    T       S    Y    A   A\x1b[m"
echo -e "\x1b[3mM   M  A   A    T   SSSS     Y    A   A\x1b[m"
echo ''
echo -e "\x1b[3m\x1b[4mCloud MultiNode\x1b[m"
echo ''

if [ "$#" -ne 1 ]; then
	USERVALS=""
else
	USERVALS=$1
	USERINTERACTION="NO"
	IFS='├' read -r -a USERLISTVALS <<< $USERVALS
	CLUSTERTHENAME="${USERLISTVALS[0]}"
	THECLOUDCHOICE="${USERLISTVALS[1]}"
	NODESTHENUMBER="${USERLISTVALS[2]}"
	PLIMIT="${USERLISTVALS[3]}"
	SECRETSTHEFILE="${USERLISTVALS[4]}"
	SECRETTHEKEY="${USERLISTVALS[5]}"
	if [ "$THECLOUDCHOICE" == "1" ] ; then
		E2ECHOICE1="${USERLISTVALS[6]}"	
		E2ECHOICE2="${USERLISTVALS[7]}"	
		E2ECHOICE3="${USERLISTVALS[8]}"
		E2ECHOICE4="${USERLISTVALS[9]}"
		E2ECHOICE5="${USERLISTVALS[10]}"
		E2ECHOICE6="${USERLISTVALS[11]}"		
	fi
	USERINPUTCOUNT=${#USERLISTVALS[@]}
	if (( $USERINPUTCOUNT > 12 )) ; then
		MANUALRUN="YES"
	fi				
fi

if [ "$USERINTERACTION" == "YES" ] || [ "$USERINTERACTION" == "yes" ] ; then
	UUID=$(uuidgen)
	UUIDREAL=${UUID:1:6}
	read -p "Cluster Name 				> " -e -i "$UUIDREAL" CLUSTERTHENAME
	read -p "
Cloud Choice
$STACKLINELENGTHY 
E2E(1) / AWS(2) / Azure(3) / GCP(4) / UTHO(5) 		 
$STACKLINELENGTHY
					> " -e -i "1" THECLOUDCHOICE
	echo ""
	read -p "No Of Nodes 				> " -e -i "5" NODESTHENUMBER
	echo ""
	THECORECOUNT=$(grep -c ^processor /proc/cpuinfo)
	read -p "Parallelization Limit 			> " -e -i "$THECORECOUNT" PLIMIT
	echo ""

	read -p "Secrets File Location 			> " -e -i "$BASE/Secrets/." SECRETSTHEFILE
	echo ""
	read -s -p "Secrets File Key 			> " -e -i "" SECRETTHEKEY
	echo ''	
	echo ''
fi

if (( $PLIMIT > $NODESTHENUMBER )) ; then
	PLIMIT=$((NODESTHENUMBER + 0))
fi

RANDOMCLUSTERNAME=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 15 | head -n 1)
sudo mkdir -p $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME
sudo rm -rf $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/*
sudo chmod -R 777 $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME

ITER=${SECRETTHEKEY:7:6}
RANDOMSECFILENAME=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 15 | head -n 1)
sudo cp $SECRETSTHEFILE $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$RANDOMSECFILENAME
sudo chown $CURRENTUSER:$CURRENTUSER $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$RANDOMSECFILENAME
sudo chmod u=r,g=,o= $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$RANDOMSECFILENAME
REALSECRETSFILENAME=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 15 | head -n 1)
openssl enc -a -d -aes-256-cbc -pbkdf2 -iter $ITER -k $SECRETTHEKEY -in $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$RANDOMSECFILENAME -out $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$REALSECRETSFILENAME
sudo chown $CURRENTUSER:$CURRENTUSER $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$REALSECRETSFILENAME
sudo chmod u=r,g=,o= $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$REALSECRETSFILENAME
THEACTUALSECRETS=$(<$BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$REALSECRETSFILENAME)		
sudo rm -rf $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$REALSECRETSFILENAME				
sudo rm -rf $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$RANDOMSECFILENAME
											
if [ "$THECLOUDCHOICE" == "1" ] ; then
	if [ "$USERINTERACTION" == "YES" ] || [ "$USERINTERACTION" == "yes" ] ; then
		echo -e "\x1b[3m\x1b[4mE2E OPTIONS\x1b[m"
		echo ""
		read -p "Location (Delhi / Delhi-NCR-2 / Mumbai) > " -e -i "Mumbai" E2ECHOICE1
		echo ""
		read -p "Project 				> " -e -i "12777" E2ETHEPROJECTCHOICE1		
		echo ""
		
		E2ECHOICE1="$E2ETHEPROJECTCHOICE1¤$E2ECHOICE1"
		
		read -p "Instance Prefix 			> " -e -i "e2e" E2ECHOICE2
		echo ""
		read -p "Region 					> " -e -i "ncr" E2ECHOICE3
		echo ""	
		read -p "Plan Choice
$E2EPLANCHOICEFORCLUSTER
					> " -e -i "C3-4vCPU-8RAM-100DISK-C3.128GB-AlmaLinux-9" E2ECHOICE4	
		echo ""	
		read -p "OS Distro Choice
$E2EOSIMAGECHOICEFORCLUSTER
					> " -e -i "AlmaLinux-9-Distro" E2ECHOICE5	
		echo ""	
		read -p "Master PEM File				> " -e -i "$BASE/Resources/E2E-Master.pem" E2ECHOICE6
		echo ""
	fi
		
	WHENJOBBEGAN=$(echo $(date +%H):$(date +%M))
		
	APIKey=$(echo $THEACTUALSECRETS | jq -c ".MN.Cluster.Secrets[0].APIKey?")
	APIKey="${APIKey//$DoubleQuotes/$NoQuotes}"
	TokenName=$(echo $THEACTUALSECRETS | jq -c ".MN.Cluster.Secrets[0].TokenName?")
	TokenName="${TokenName//$DoubleQuotes/$NoQuotes}"
	AuthToken=$(echo $THEACTUALSECRETS | jq -c ".MN.Cluster.Secrets[0].AuthToken?")
	AuthToken="${AuthToken//$DoubleQuotes/$NoQuotes}"
	SSHKey=$(echo $THEACTUALSECRETS | jq -c ".MN.Cluster.Secrets[0].SSHKey?")
	SSHKey="${SSHKey//$DoubleQuotes/$NoQuotes}"

	sudo chown $CURRENTUSER:$CURRENTUSER $E2ECHOICE6
	sudo chmod 400 $E2ECHOICE6
							
	PARALLELFUNCCOUNT=0
	THEPARALLELFUNC_LIST=()
	
	THEPARALLELFUNCTIONLIST=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 15 | head -n 1)
	THENEWPRFUNC='#!/bin/bash'"
"
	echo "$THENEWPRFUNC" | sudo tee $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$THEPARALLELFUNCTIONLIST > /dev/null
	sudo chmod 777 $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$THEPARALLELFUNCTIONLIST

	CLUSTERDELETELIST=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 15 | head -n 1)
	DELETECLUSTERFILESTART='#!/bin/bash'"
"
	echo "$DELETECLUSTERFILESTART" | sudo tee $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$CLUSTERDELETELIST > /dev/null
	sudo chmod 777 $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$CLUSTERDELETELIST
	
	for (( IV=1 ; IV<=$NODESTHENUMBER ; IV++ )); 
	do
		VAR1=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 15 | head -n 1)
		VAR2=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 15 | head -n 1)
		VAR3=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 15 | head -n 1)
		VAR4=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 15 | head -n 1)	
		THEPARALLELFUNCTIONNAME="ParallelFunction$IV"
		echo "function $THEPARALLELFUNCTIONNAME(){" | sudo tee -a $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$THEPARALLELFUNCTIONLIST > /dev/null
		echo "$BASE/Scripts/E2ECreateTerminal \"$VAR1\" \"$VAR2\" \"$VAR3\" \"$APIKey\" \"$E2ECHOICE1\" \"$AuthToken\" \"$TokenName\" \"$E2ECHOICE3\" \"$E2ECHOICE4\" \"$E2ECHOICE5\" \"$SSHKey\" \"$CLUSTERTHENAME-$E2ECHOICE2-$IV\" \"$E2ECHOICE6\" \"$VAR4\" \"$CLUSTERTHENAME-$E2ECHOICE2-$IV-DONE\" \"$CLUSTERTHENAME-$E2ECHOICE2-$IV-FAIL\" \"$CLUSTERTHENAME-$E2ECHOICE2-$IV-ERROR\" \"$BASE\" \"22\" \"$CLUSTERDELETELIST\" \"$CLUSTERTHENAME-$RANDOMCLUSTERNAME\"" | sudo tee -a $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$THEPARALLELFUNCTIONLIST > /dev/null		
		echo "}" | sudo tee -a $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$THEPARALLELFUNCTIONLIST > /dev/null
		THEPARALLELFUNC_LIST+=("$THEPARALLELFUNCTIONNAME")
		PARALLELFUNCCOUNT=$((PARALLELFUNCCOUNT + 1))
	done
	
	echo "function ParallelFunctionDummy(){
echo \"\"
}" | sudo tee -a $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$THEPARALLELFUNCTIONLIST > /dev/null	

	if [ "$PARALLELFUNCCOUNT" -gt "$PLIMIT" ]; then
		echo "" | sudo tee -a $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$THEPARALLELFUNCTIONLIST > /dev/null
		THEREQPARALLEL=$((PARALLELFUNCCOUNT))
		ITERATIONREQ=$((THEREQPARALLEL / PLIMIT))
		ITERATIONREQMOD=$((THEREQPARALLEL % PLIMIT))
		if [ "$ITERATIONREQMOD" -gt 0 ]; then
			ITERATIONREQ=$((ITERATIONREQ + 1))
		fi
		TotalIteration=0
		LEFTOVERCOUNT=$((PARALLELFUNCCOUNT))
		TOBERUN=$((PLIMIT))
		for (( IterationOuter=0; IterationOuter<ITERATIONREQ; IterationOuter++ ))
		do
			if (( $TotalIteration == 0 )) ; then
				DEDUCTRUN=$((LEFTOVERCOUNT-TOBERUN))	
			else
				DEDUCTRUN=$((DEDUCTRUN-TOBERUN))	
			fi	
			if [ "$DEDUCTRUN" -lt 0 ]; then
				TOBERUN=$((TOBERUN + DEDUCTRUN))
			fi
			
			THEEXPORTLIST=""
			THEPARALLELEXECLIST="parallel -j $TOBERUN :::"	
			FromCurrent=$((TotalIteration))
			ToLimit=$((TOBERUN + TotalIteration))
			LastNumber=$((ToLimit - 1))
			for (( Iteration=FromCurrent; Iteration<ToLimit; Iteration++ ))
			do  
				if (( $Iteration == $LastNumber )) ; then
					THEEXPORTLIST+="export -f ${THEPARALLELFUNC_LIST[$Iteration]}"
				else
					THEEXPORTLIST+="export -f ${THEPARALLELFUNC_LIST[$Iteration]} && "
				fi
				THEPARALLELEXECLIST+=" ${THEPARALLELFUNC_LIST[$Iteration]}"	   
				TotalIteration=$((TotalIteration + 1))
			done

			echo "$THEEXPORTLIST" | sudo tee -a $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$THEPARALLELFUNCTIONLIST > /dev/null
			echo "$THEPARALLELEXECLIST" | sudo tee -a $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$THEPARALLELFUNCTIONLIST > /dev/null
			echo "" | sudo tee -a $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$THEPARALLELFUNCTIONLIST > /dev/null			
		done
	else
		THEEXPORTLIST=""
		THEPARALLELEXECLIST="parallel -j $((PARALLELFUNCCOUNT + 1)) :::"

		for THEPARALLELFUNC_LIST_1 in "${THEPARALLELFUNC_LIST[@]}"
		do
			THEEXPORTLIST+="export -f $THEPARALLELFUNC_LIST_1 && "
			THEPARALLELEXECLIST+=" $THEPARALLELFUNC_LIST_1"
		done
		THEEXPORTLIST+="export -f ParallelFunctionDummy"
		THEPARALLELEXECLIST+=" ParallelFunctionDummy"
		echo "$THEEXPORTLIST" | sudo tee -a $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$THEPARALLELFUNCTIONLIST > /dev/null
		echo "$THEPARALLELEXECLIST" | sudo tee -a $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$THEPARALLELFUNCTIONLIST > /dev/null		
	fi

	echo -e "${RED}¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬${NC}"
	echo -e "${BOLD}\x1b[3m\x1b[30;44m    OPEN E2E PLANETARY SYSTEM ENCOUNTERED    \x1b[m${NORM}${BLUE}${BOLD}"
	echo -e "${RED}¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬${NC}"
	echo ''
	echo -e "${GREEN}Kryptonian${NC}  : \x1b[3mOrders Sir !!"
	echo ''
	sleep 2						
	echo -e "${GREEN}General Zod${NC} : Release The World Engine"
	sleep 2						
	echo -e "              Bring The Phantom Drive Online"
	sleep 2						
	echo -e "${RED}${BOLD}              INITIATE TERRAFORMING${NORM}${NC}"
	sleep 1						
	echo ''
	echo -e "              \x1b[3m\x1b[4mhttp://bit.ly/InitiateTerraform"
	echo ''						
	sleep 1
	echo -e "${RED}¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬${NC}"
	echo ''	
	$BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$THEPARALLELFUNCTIONLIST
	echo ''	
	echo -e "${RED}¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬${NC}"
	echo ''
	
	sudo rm -rf $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$THEPARALLELFUNCTIONLIST
	
	TOTALSUCCESS=0
	THENEWNODELIST=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 15 | head -n 1)
	touch $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$THENEWNODELIST	
	sudo chmod 777 $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$THENEWNODELIST
		
	for (( IV=1 ; IV<=$NODESTHENUMBER ; IV++ )); 
	do
		if [ -f "$BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$CLUSTERTHENAME-$E2ECHOICE2-$IV-DONE" ]
		then
			echo $(cat "$BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$CLUSTERTHENAME-$E2ECHOICE2-$IV-DONE") | sudo tee -a $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$THENEWNODELIST > /dev/null
			TOTALSUCCESS=$((TOTALSUCCESS + 1))
		fi
	done
	
	echo -e "${RED}¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬${NC}"
	echo -e "${BOLD}\x1b[3m\x1b[30;44m               FINAL REPORT                   \x1b[m${NORM}${BLUE}${BOLD}"
	echo -e "${RED}¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬${NC}"
	echo -e "${GREEN}Requested${NC}  : \x1b[3m$NODESTHENUMBER"
	echo -e "${GREEN}Created${NC}    : \x1b[3m$TOTALSUCCESS"		
	echo -e "${RED}¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬¬${NC}"
	echo ''

	VAR5=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 15 | head -n 1)
	echo "
sudo rm -rf $BASE/Output/$CLUSTERTHENAME-$E2ECHOICE2-EXECUTE-ORDER-66-$VAR5
sudo rm -rf $BASE/Output/$CLUSTERTHENAME-$E2ECHOICE2-LIST-$VAR5
" | sudo tee -a $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$CLUSTERDELETELIST > /dev/null
	
	MINIMUMSUCCESS="0"
	if [ "$TOTALSUCCESS" -gt "$MINIMUMSUCCESS" ]; then
		VAR6=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 15 | head -n 1)
		sudo cp $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$CLUSTERDELETELIST $BASE/Secrets/$VAR6
		sudo chown $CURRENTUSER:$CURRENTUSER $BASE/Secrets/$VAR6
		sudo chmod u=r,g=,o= $BASE/Secrets/$VAR6
		openssl enc -a -aes-256-cbc -pbkdf2 -iter $ITER -in $BASE/Secrets/$VAR6 -out $BASE/Secrets/".$VAR6" -k $SECRETTHEKEY
		sudo chown $CURRENTUSER:$CURRENTUSER $BASE/Secrets/".$VAR6"
		sudo chmod u=r,g=,o= $BASE/Secrets/".$VAR6"
		sudo rm -rf $BASE/Secrets/$VAR6
		sudo rm -rf /root/.bash_history
		sudo rm -rf /home/$CURRENTUSER/.bash_history
		sudo mv $BASE/Secrets/".$VAR6" $BASE/Output/$CLUSTERTHENAME-$E2ECHOICE2-EXECUTE-ORDER-66-$VAR5

		VAR7=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 15 | head -n 1)
		sudo cp $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/$THENEWNODELIST $BASE/Secrets/$VAR7
		sudo chown $CURRENTUSER:$CURRENTUSER $BASE/Secrets/$VAR7
		sudo chmod u=r,g=,o= $BASE/Secrets/$VAR7
		openssl enc -a -aes-256-cbc -pbkdf2 -iter $ITER -in $BASE/Secrets/$VAR7 -out $BASE/Secrets/".$VAR7" -k $SECRETTHEKEY
		sudo chown $CURRENTUSER:$CURRENTUSER $BASE/Secrets/".$VAR7"
		sudo chmod u=r,g=,o= $BASE/Secrets/".$VAR7"
		sudo rm -rf $BASE/Secrets/$VAR7
		sudo rm -rf /root/.bash_history
		sudo rm -rf /home/$CURRENTUSER/.bash_history
		sudo mv $BASE/Secrets/".$VAR7" $BASE/Output/$CLUSTERTHENAME-$E2ECHOICE2-LIST-$VAR5
	fi
		
	sudo rm -rf $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/*
	sudo rm -rf $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME	
	
	WHENJOBFIN=$(echo $(date +%H):$(date +%M))
	SEC1=`date +%s -d ${WHENJOBBEGAN}`
	SEC2=`date +%s -d ${WHENJOBFIN}`
	DIFFSEC=`expr ${SEC2} - ${SEC1}`
	THETOTALTIMETAKEN=$(echo `date +%M -ud @${DIFFSEC}`)
	echo "Total Time Taken => $THETOTALTIMETAKEN Minutes"	
	echo ''	
	echo "=============================================================================="
	echo ''											
fi

sudo rm -rf $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME/*
sudo rm -rf $BASE/tmp/$CLUSTERTHENAME-$RANDOMCLUSTERNAME
sudo rm -rf /root/.bash_history
sudo rm -rf /home/$CURRENTUSER/.bash_history

if [ "$MANUALRUN" == "YES" ] || [ "$MANUALRUN" == "yes" ] ; then
	read -p "" -e -i "" QUIT
	echo ""
fi		

