#!/bin/bash

CHITRAGUPTA="THECGVALS"
REQFOLDER="THECGFOLDER"
WHERETORUNFROM="THEBRAHMAIPDET"
TEMPLOC="TEMPDPLOC"
STACKNAME="THECURSTACK"
NOHUP="LOGFILE"
MEMYSELF="SELFME"
REQUNQ="UNQREQ"
EFKSTACK="E1F1K"

BASE="/opt/Matsya"

IFS='â– ' read -r -a CHITRAGUPTA_VAL <<< $CHITRAGUPTA
CGLOGINDET="${CHITRAGUPTA_VAL[0]}"

CGPORTSDET="${CHITRAGUPTA_VAL[1]}"		
IFS=',' read -r -a CGPORTS_DET <<< "$CGPORTSDET"
PORT_1="${CGPORTS_DET[0]}"
PORT_2="${CGPORTS_DET[1]}"
PORT_3="${CGPORTS_DET[2]}"
PORT_4="${CGPORTS_DET[3]}"

CGGUACAMOLEDET="${CHITRAGUPTA_VAL[2]}"
IFS=',' read -r -a CGGUACAMOLE_DET <<< "$CGGUACAMOLEDET"
V3="${CGGUACAMOLE_DET[0]}"
V4="${CGGUACAMOLE_DET[1]}"
V5="${CGGUACAMOLE_DET[2]}"
V7="${CGGUACAMOLE_DET[5]}"
V8="${CGGUACAMOLE_DET[6]}"
V9="${CGGUACAMOLE_DET[7]}"
IFS=':' read -r -a _V9 <<< "$V9"
GMMEM="${_V9[0]}"
GMCRS="${_V9[1]}"
V10="${CGGUACAMOLE_DET[8]}"
IFS=':' read -r -a _V10 <<< "$V10"
GCMEM="${_V10[0]}"
GCCRS="${_V10[1]}"
			
CGMYSQLDET="${CHITRAGUPTA_VAL[3]}"
IFS=',' read -r -a CGMYSQL_DET <<< "$CGMYSQLDET"
V1="${CGMYSQL_DET[0]}"
V2="${CGMYSQL_DET[1]}"
IFS=':' read -r -a _V2 <<< "$V2"
PGMEM="${_V2[0]}"
PGCRS="${_V2[1]}"
V6="${CGMYSQL_DET[2]}"

CGPHPADDET="${CHITRAGUPTA_VAL[4]}"
IFS=',' read -r -a CGPHPAD_DET <<< "$CGPHPADDET"
PHPAD1="${CGPHPAD_DET[0]}"
PHPAD2="${CGPHPAD_DET[1]}"
IFS=':' read -r -a _PHPAD2 <<< "$PHPAD2"
PHPAD3="${_PHPAD2[0]}"
PHPAD4="${_PHPAD2[1]}"
PHPAD5="${CGPHPAD_DET[2]}"

CGMDET="${CHITRAGUPTA_VAL[5]}"
IFS=',' read -r -a CGM_DET <<< "$CGMDET"
MT0="${CGM_DET[0]}"
MT1="${CGM_DET[1]}"
MT2="${CGM_DET[2]}"
MT3="${CGM_DET[3]}"
MT4="${CGM_DET[4]}"
MT5="${CGM_DET[5]}"
MT6="${CGM_DET[6]}"
MT7="${CGM_DET[7]}"
IFS=':' read -r -a _MT7 <<< "$MT7"
MT7_M="${_MT7[0]}"
MT7_C="${_MT7[1]}"
MT8="${CGM_DET[8]}"
MT9="${CGM_DET[9]}"
IFS=':' read -r -a _MT9 <<< "$MT9"
MT9_M="${_MT9[0]}"
MT9_C="${_MT9[1]}"
MT10="${CGM_DET[10]}"
MT11="${CGM_DET[11]}"
IFS=':' read -r -a _MT11 <<< "$MT11"
MT11_M="${_MT11[0]}"
MT11_C="${_MT11[1]}"
MT12="${CGM_DET[12]}"
MT13="${CGM_DET[13]}"
IFS=':' read -r -a _MT13 <<< "$MT13"
MT13_M="${_MT13[0]}"
MT13_C="${_MT13[1]}"

CG1MDET="${CHITRAGUPTA_VAL[6]}"
IFS=',' read -r -a CG1M_DET <<< "$CG1MDET"
M1T0="${CG1M_DET[0]}"
M1T1="${CG1M_DET[1]}"
M1T2="${CG1M_DET[2]}"
M1T3="${CG1M_DET[3]}"
M1T4="${CG1M_DET[6]}"
M1T_4=$(echo "$M1T4" | tr '[:upper:]' '[:lower:]')	
M1T6="${CG1M_DET[7]}"
M1T7="${CG1M_DET[8]}"
IFS=':' read -r -a _M1T7 <<< "$M1T7"
M1T7_M="${_M1T7[0]}"
M1T7_C="${_M1T7[1]}"
M1T8="${CG1M_DET[9]}"
M1T9="${CG1M_DET[10]}"
IFS=':' read -r -a _M1T9 <<< "$M1T9"
M1T9_M="${_M1T9[0]}"
M1T9_C="${_M1T9[1]}"    

CG7MDET="${CHITRAGUPTA_VAL[7]}"
IFS=',' read -r -a CG7M_DET <<< "$CG7MDET"
MK1T0="${CG7M_DET[0]}"
MK1T1="${CG7M_DET[1]}"
MK1T2="${CG7M_DET[2]}"
MK1T4="${CG7M_DET[5]}"
MK1T_4=$(echo "$MK1T4" | tr '[:upper:]' '[:lower:]')	
MK1T6="${CG7M_DET[6]}"
MK1T7="${CG7M_DET[7]}"
IFS=':' read -r -a _MK1T7 <<< "$MK1T7"
MK1T7_M="${_MK1T7[0]}"
MK1T7_C="${_MK1T7[1]}"

PVT8CLDDET="${CHITRAGUPTA_VAL[8]}"
IFS=',' read -r -a PVT8CLD_DET <<< "$PVT8CLDDET"
MK1PC0="${PVT8CLD_DET[0]}"
MK1PC1="${PVT8CLD_DET[1]}"
MK1PC2="${PVT8CLD_DET[2]}"
MK1PC4="${PVT8CLD_DET[3]}"
MK1PC_4=$(echo "$MK1PC4" | tr '[:upper:]' '[:lower:]')	
MK1PC6="${PVT8CLD_DET[4]}"
MK1PC7="${PVT8CLD_DET[5]}"
IFS=':' read -r -a _MK1PC7 <<< "$MK1PC7"
MK1PC7_M="${_MK1PC7[0]}"
MK1PC7_C="${_MK1PC7[1]}"
MK1PC8="${PVT8CLD_DET[6]}"
MK1PC9="${PVT8CLD_DET[7]}"
MK1PC10="${PVT8CLD_DET[8]}"
MK1PC11="${PVT8CLD_DET[9]}"
MK1PC12="${PVT8CLD_DET[10]}"
MK1PC13="${PVT8CLD_DET[13]}"
MK1PC14="${PVT8CLD_DET[14]}"

sudo mkdir -p $MK1PC8
sudo chown -R root:root $MK1PC8
sudo chmod -R u=rwx,g=rwx,o=rwx $MK1PC8
sudo mkdir -p $MK1PC9
sudo chown -R root:root $MK1PC9
sudo chmod -R u=rwx,g=rwx,o=rwx $MK1PC9

DOCKERPTEMPLATE=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 15 | head -n 1)
echo "version: '3.7'
services:
  pvtcld:
    image: $MK1PC6
    ports:
      - \"$MK1PC1:80\"
    volumes:
      - $MK1PC9:/var/www/html/data
      - $MK1PC8:/media/share
      - $MK1PC11:/EnablePvtCldShare.sh
      - $MK1PC14:/EnablePvtCldShare2.sh      
      - $MK1PC12:/etc/apache2/conf-enabled/custom-apache-config.conf
      - $MK1PC13:/media/share2/phpconfig.txt
    environment:
      #MYSQL_HOST: mysql
      #MYSQL_DATABASE: pvtcld_$MK1PC10
      #MYSQL_USER: pvtcld_$MK1PC10
      #MYSQL_PASSWORD: $MK1PC0
      #MYSQL_ROOT_PASSWORD: $V6
      NEXTCLOUD_ADMIN_USER: admin
      NEXTCLOUD_ADMIN_PASSWORD: $MK1PC0
      NEXTCLOUD_DATA_DIR: /var/www/html/data      
    #depends_on:
    #  - mysql
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.""$STACKNAME""THE_PVT_CLDreplica == true   
      resources:
        limits:
          cpus: '$MK1PC7_C'
          memory: '""$MK1PC7_M""M'
    networks:
      - $STACKNAME-encrypted-overlay
      
  kerberos:
    image: $MK1T6
    hostname: \"kerberos\"
    domainname: \"$MK1T_4.vamana\"
    environment:
      KERB_PASSWD: \"$MK1T0\"
    volumes:
      - type: bind
        source: $REQFOLDER/kerberos/krb5.conf
        target: /etc/krb5.conf
      - type: bind
        source: $REQFOLDER/kerberos/kdc.conf
        target: /etc/krb5kdc/kdc.conf
      - type: bind
        source: $REQFOLDER/kerberos/kadm5.acl
        target: /etc/krb5kdc/kadm5.acl
    ports:
      - \"$MK1T1:88\"
      - \"$MK1T2:749\"      
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.""$STACKNAME""CHITRAGUPTAreplica == true   
      resources:
        limits:
          cpus: '$MK1T7_C'
          memory: '""$MK1T7_M""M'
    networks:
      - $STACKNAME-encrypted-overlay
          
  openldap:
    image: $M1T6
    domainname: \"$M1T_4.vamana\"
    hostname: \"openldap\"
    environment:
      LDAP_LOG_LEVEL: \"256\"
      LDAP_ORGANISATION: \"$M1T4\"
      LDAP_DOMAIN: \"$M1T_4.vamana\"
      LDAP_BASE_DN: \"dc=$M1T_4,dc=vamana\"
      LDAP_ADMIN_PASSWORD: \"$M1T0\"
      LDAP_CONFIG_PASSWORD: \"$M1T0\"
      LDAP_READONLY_USER: \"false\"
      LDAP_READONLY_USER_USERNAME: \"readonly\"
      LDAP_READONLY_USER_PASSWORD: \"readonly\"
      LDAP_RFC2307BIS_SCHEMA: \"false\"
      LDAP_BACKEND: \"mdb\"
      LDAP_TLS: \"false\"
      LDAP_TLS_CRT_FILENAME: \"ldap.crt\"
      LDAP_TLS_KEY_FILENAME: \"ldap.key\"
      LDAP_TLS_CA_CRT_FILENAME: \"ca.crt\"
      LDAP_TLS_ENFORCE: \"false\"
      LDAP_TLS_CIPHER_SUITE: \"SECURE256:-VERS-SSL3.0\"
      LDAP_TLS_PROTOCOL_MIN: \"3.1\"
      LDAP_TLS_VERIFY_CLIENT: \"demand\"
      LDAP_REPLICATION: \"false\"
      KEEP_EXISTING_CONFIG: \"false\"
      LDAP_REMOVE_CONFIG_AFTER_SETUP: \"false\"
      LDAP_SSL_HELPER_PREFIX: \"ldap\"
    tty: true
    stdin_open: true
    volumes:
      - type: bind
        source: $REQFOLDER/ldapdata
        target: /var/lib/ldap
      - type: bind
        source: $REQFOLDER/ldapconfig
        target: /etc/ldap/slapd.d 
      - type: bind
        source: $REQFOLDER/ldapcerts
        target: /container/service/slapd/assets/certs/
      - type: bind
        source: ${REQFOLDER}/ldif
        target: /container/service/slapd/assets/config/bootstrap/ldif/custom
    ports:
      - \"$M1T1:389\"
      - \"$M1T2:636\"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.""$STACKNAME""CHITRAGUPTAreplica == true   
      resources:
        limits:
          cpus: '$M1T7_C'
          memory: '""$M1T7_M""M'
    networks:
      - $STACKNAME-encrypted-overlay
      
  phpldapadmin:
    image: $M1T8
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: openldap
    ports:
      - \"$M1T3:443\"
    depends_on:
      - openldap
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.""$STACKNAME""CHITRAGUPTAreplica == true   
      resources:
        limits:
          cpus: '$M1T9_C'
          memory: '""$M1T9_M""M'
    networks:
      - $STACKNAME-encrypted-overlay
          
  prometheus:
    image: $MT6
    volumes:
      - type: bind
        source: $REQFOLDER/prometheusdata
        target: /prometheus
      - type: bind
        source: $REQFOLDER/prometheus/prometheus.yml
        target: /etc/prometheus/prometheus.yml
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock        
    ports:
      - \"$MT1:9090\"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.""$STACKNAME""CHITRAGUPTAreplica == true   
      resources:
        limits:
          cpus: '$MT7_C'
          memory: '""$MT7_M""M'
    networks:
      - $STACKNAME-encrypted-overlay

  node-exporter:
    image: $MT12
    ports:
      - \"$MT4:9100\"    
    volumes:
      - type: bind
        source: /proc
        target: /host/proc
        read_only: true 
      - type: bind
        source: /sys
        target: /host/sys
        read_only: true 
      - type: bind
        source: /
        target: /rootfs
        read_only: true                      
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'"'
      - '"'"'--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'"'"'
    '"deploy:
      mode: global
      resources:
        limits:
          cpus: '$MT13_C'
          memory: '""$MT13_M""M'
    networks:
      - $STACKNAME-encrypted-overlay

  grafana:
    image: $MT10
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=$MT0
    volumes:
      - type: bind
        source: $REQFOLDER/grafanadata
        target: /var/lib/grafana
      - type: bind
        source: $REQFOLDER/grafana/datasource.yml
        target: /etc/grafana/provisioning/datasources/datasource.yml
      - type: bind
        source: $REQFOLDER/grafana/dashboard.yml
        target: /etc/grafana/provisioning/dashboards/dashboard.yml
      - type: bind
        source: $REQFOLDER/grafana/dashboard.json
        target: /etc/grafana/provisioning/dashboards/dashboard.json 
      - type: bind
        source: $REQFOLDER/grafana/container-metrics.json
        target: /etc/grafana/provisioning/dashboards/container-metrics.json
      - type: bind
        source: $REQFOLDER/grafana/node-metrics.json
        target: /etc/grafana/provisioning/dashboards/node-metrics.json
    ports:
      - \"$MT3:3000\"
    depends_on:
      - prometheus
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.""$STACKNAME""CHITRAGUPTAreplica == true   
      resources:
        limits:
          cpus: '$MT11_C'
          memory: '""$MT11_M""M'
    networks:
      - $STACKNAME-encrypted-overlay

  cadvisor:
    image: $MT8
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
      - type: bind
        source: /
        target: /rootfs
        read_only: true 
      - type: bind
        source: /var/run
        target: /var/run
        read_only: true 
      - type: bind
        source: /sys
        target: /sys
        read_only: true 
      - type: bind
        source: /var/lib/docker/
        target: /var/lib/docker
        read_only: true                                        
    ports:
      - \"$MT2:8080\"
    depends_on:
      - prometheus
    deploy:
      mode: global  
      resources:
        limits:
          cpus: '$MT9_C'
          memory: '""$MT9_M""M'
    networks:
      - $STACKNAME-encrypted-overlay
          
  mysql:
    image: $V1
    environment:
      MYSQL_DATABASE: $V3
      MYSQL_USER: $V4
      MYSQL_PASSWORD: $V5
      MYSQL_ROOT_PASSWORD: $V6
    ports:
      - \"$PORT_1:3306\"
    volumes:   
      - type: bind
        source: $REQFOLDER/data/mysql
        target: /var/lib/mysql
      - type: bind
        source: $REQFOLDER/mysql/initdb.sql
        target: /docker-entrypoint-initdb.d/initdb.sql
      - type: bind
        source: $REQFOLDER/mysql/schema/initdb-redux.sql
        target: /docker-entrypoint-initdb.d/initdb-redux.sql 
      - type: bind
        source: $REQFOLDER/mysql/my.cnf
        target: /etc/mysql/my.cnf
        read_only: true               
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.""$STACKNAME""CHITRAGUPTAreplica == true   
      resources:
        limits:
          cpus: '$PGCRS'
          memory: '""$PGMEM""M'
    networks:
      - $STACKNAME-encrypted-overlay

  guacamole:
    image: $V7
    environment:
      GUACAMOLE_HOME: /home/guacamole/.guacamole2
      GUACD_HOSTNAME: guacd
      GUACD_PORT: 4822 
      MYSQL_HOSTNAME: mysql
      MYSQL_DATABASE: $V3
      MYSQL_USER: $V4
      MYSQL_PASSWORD: $V5
      MYSQL_ROOT_PASSWORD: $V6                 
    depends_on:
      - mysql
      - guacd      
    ports:
      - \"$PORT_2:8080\"
    volumes:   
      - type: bind
        source: $REQFOLDER/guacamole
        target: /etc/guacamole
      - type: bind
        source: $REQFOLDER/guacamoledata
        target: /home/guacamole/.guacamole2     
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.""$STACKNAME""CHITRAGUPTAreplica == true   
      resources:
        limits:
          cpus: '$GMCRS'
          memory: '""$GMMEM""M'
    networks:
      - $STACKNAME-encrypted-overlay

  guacd:
    image: $V8      
    ports:
      - \"$PORT_3:4822\"
    volumes:   
      - type: bind
        source: $REQFOLDER/guacddata
        target: /usr/local/guacamole    
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.""$STACKNAME""CHITRAGUPTAreplica == true   
      resources:
        limits:
          cpus: '$GCCRS'
          memory: '""$GCMEM""M'
    networks:
      - $STACKNAME-encrypted-overlay

  phpmyadmin:
    image: $PHPAD1
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: $PHPAD5          
    ports:
      - "$PORT_4:80"
    volumes:   
      - type: bind
        source: $REQFOLDER/phpmyadmin/boodark
        target: /var/www/html/themes/boodark
        read_only: true       
      - type: bind
        source: $REQFOLDER/phpmyadmin/config.user.inc.php
        target: /etc/phpmyadmin/config.user.inc.php
        read_only: true                
    depends_on:
      - mysql         
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.""$STACKNAME""CHITRAGUPTAreplica == true   
      resources:
        limits:
          cpus: '$PHPAD4'
          memory: '""$PHPAD3""M'
    networks:
      - $STACKNAME-encrypted-overlay
      
networks:
  $STACKNAME-encrypted-overlay:
    external: true" | tee $TEMPLOC/$DOCKERPTEMPLATE > /dev/null

IFS=',' read -r -a WHERETO_RUNFROM <<< "$WHERETORUNFROM"
VL1="${WHERETO_RUNFROM[0]}"
VL2="${WHERETO_RUNFROM[1]}"
VL3="${WHERETO_RUNFROM[2]}"
VL4="${WHERETO_RUNFROM[3]}"

cat $TEMPLOC/$DOCKERPTEMPLATE

echo "" && echo "Install Guacamole & MySql..."
echo "" && echo "Install Prometheus, Grafana, Node Exporter & cAdvisor..."
scp -i "$VL1" -o StrictHostKeyChecking=no -P $VL2 "$TEMPLOC/$DOCKERPTEMPLATE" "$VL3@$VL4:/home/$VL3"
ssh -i "$VL1" -o StrictHostKeyChecking=no -p $VL2 $VL3@$VL4 "sudo rm -f /home/$VL3/ChitraGupta.yml && sudo mv /home/$VL3/$DOCKERPTEMPLATE /home/$VL3/ChitraGupta.yml && docker stack deploy --compose-file /home/$VL3/ChitraGupta.yml $STACKNAME""_CHITRAGUPTA && sudo rm -f /home/$VL3/ChitraGupta.yml && docker stack deploy --compose-file $EFKSTACK $STACKNAME""_EFK_CHITRAGUPTA"

sudo rm -f $TEMPLOC/$DOCKERPTEMPLATE
sudo rm -f $MEMYSELF
sudo mv $NOHUP $BASE/Output/Logs/$REQUNQ-CHITRAGUPTA$STACKNAME.out

