#!/bin/bash

THEK8SKUBESPHEREVERSION=$(curl -s https://api.github.com/repos/kubesphere/kubekey/releases/latest | grep tag_name | cut -d '"' -f 4)

STACKLINELENGTHY="-----------------------------------------------"

STACKSOFTWAREMASTERS=(2 3 5 6 8 9)

ALLSTACKITEMSLIST="Eg: 1,3|3,6|6,3|4,7,8,9|7,8,9,4|8,9,4,7|9,4,7,8
$STACKLINELENGTHY 
(1) KubeSphere Installer	[KI]
(2) KubeSphere Master		[KM]
(3) KubeSphere Master (HA)	[KH]
(4) KubeSphere Worker		[KW]
(5) Spark Master		[SM]
(6) Spark Master (HA)		[SH]
(7) Spark Worker		[SW]
(8) ZooKeeper			[ZK]	
(9) Kafka Broker		[KB]	 
$STACKLINELENGTHY"

E2EPLANCHOICEFORCLUSTER="$STACKLINELENGTHY
C3-4vCPU-8RAM-100DISK-C3.128GB-AlmaLinux-9
M3-4vCPU-32RAM-100DISK-M3.32GB-AlmaLinux-9

C3-4vCPU-8RAM-100DISK-C3.128GB-AlmaLinux-8
M3-4vCPU-32RAM-100DISK-M3.32GB-AlmaLinux-8

C3-4vCPU-8RAM-100DISK-C3.128GB-CentOS-7
M3-4vCPU-32RAM-100DISK-M3.32GB-CentOS-7

C3-4vCPU-8RAM-100DISK-C3.128GB-Ubuntu22.04
M3-4vCPU-32RAM-100DISK-M3.32GB-Ubuntu22.04	 
$STACKLINELENGTHY"

E2EOSIMAGECHOICEFORCLUSTER="$STACKLINELENGTHY
AlmaLinux-9-Distro
AlmaLinux-8-Distro
CentOS-7-Distro
Ubuntu-22.04-Distro	 
$STACKLINELENGTHY"

declare -A STACKITEMSMAPPING
STACKITEMSMAPPING[1]="KI"
STACKITEMSMAPPING[2]="KM"
STACKITEMSMAPPING[3]="KH"
STACKITEMSMAPPING[4]="KW"
STACKITEMSMAPPING[5]="SM"
STACKITEMSMAPPING[6]="SH"
STACKITEMSMAPPING[7]="SW"
STACKITEMSMAPPING[8]="ZK"
STACKITEMSMAPPING[9]="KB"

declare -A STACKITEMSVERSIONMAPPING
STACKITEMSVERSIONMAPPING[1]=""
STACKITEMSVERSIONMAPPING[2]="v1.22.12|v3.4.1"
STACKITEMSVERSIONMAPPING[3]="v1.22.12|v3.4.1"
STACKITEMSVERSIONMAPPING[4]=""
STACKITEMSVERSIONMAPPING[5]="3.5.0"
STACKITEMSVERSIONMAPPING[6]="3.5.0"
STACKITEMSVERSIONMAPPING[7]=""
STACKITEMSVERSIONMAPPING[8]="3.9.1"
STACKITEMSVERSIONMAPPING[9]="7.5.2"

declare -A STACKITEMSVERSIONQMAPPING
STACKITEMSVERSIONQMAPPING[1]=""
STACKITEMSVERSIONQMAPPING[2]="Kubernetes+KubeSphere Version 		> "
STACKITEMSVERSIONQMAPPING[3]="Kubernetes+KubeSphere Version 		> "
STACKITEMSVERSIONQMAPPING[4]=""
STACKITEMSVERSIONQMAPPING[5]="Spark Version 				> "
STACKITEMSVERSIONQMAPPING[6]="Spark Version 				> "
STACKITEMSVERSIONQMAPPING[7]=""
STACKITEMSVERSIONQMAPPING[8]="ZooKeeper Version 			> "
STACKITEMSVERSIONQMAPPING[9]="Kafka Version 				> "

GetCodeForNodeDelete() {
	CLOUDANDINSTANCEID="$1"
	CLOUD=${CLOUDANDINSTANCEID:0:3}
	INSTANCEID=${CLOUDANDINSTANCEID:3}
	
	if [ $CLOUD == "e2e" ] ; then
		BLABLABLA=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 15 | head -n 1)
		echo "
C$BLABLABLA=\$(curl -X DELETE 'https://api.e2enetworks.com/myaccount/api/v1/nodes/$INSTANCEID/?apikey=$2' -H 'Authorization: Bearer $3')" | sudo tee -a $4 > /dev/null		
	fi
}

GetCodeForHostAddition() {
	XYZTHEIP="$1"
	ABCTHEHOSTNAME="$2"
	PQRTHEDYNASCRIPTFILE="$3"
	
	JKLHOSTTRANDOM=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 15 | head -n 1)
	sudo cp $BASE/Resources/HostFileUpdateTemplate $BASE/tmp/$JKLHOSTTRANDOM
	sudo chmod 777 $BASE/tmp/$JKLHOSTTRANDOM
	sed -i -e "s/THEHOST1REPLACENAME/$ABCTHEHOSTNAME/g" $BASE/tmp/$JKLHOSTTRANDOM
	sed -i -e "s/THE1REPLACEIPADDRESS/$XYZTHEIP/g" $BASE/tmp/$JKLHOSTTRANDOM
	
	cat $BASE/tmp/$JKLHOSTTRANDOM >> $PQRTHEDYNASCRIPTFILE
	
	sudo rm -rf $BASE/tmp/$JKLHOSTTRANDOM
}

GetCodeForConfigAddition() {
	XYZTHE1IP="$1"
	ABCTHEHOST1NAME="$2"
	POIUSERNAME="$3"
	MNBPWD="$4"
	VBNVER="$5"
	PQRTHEDYNA1SCRIPTFILE="$6"
	GHJCONFIGFILE="$7"
		
	JKLHOSTT1RANDOM=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 15 | head -n 1)
	sudo cp $BASE/Resources/KubeSphereConfigUpdateTemplate $BASE/tmp/$JKLHOSTT1RANDOM
	sudo chmod 777 $BASE/tmp/$JKLHOSTT1RANDOM
	sed -i -e "s/THE_1IPADDRESS/$XYZTHE1IP/g" $BASE/tmp/$JKLHOSTT1RANDOM
	sed -i -e "s/THEHOST_1NAME/$ABCTHEHOST1NAME/g" $BASE/tmp/$JKLHOSTT1RANDOM
	sed -i -e "s/THEHOST_1UNAME/$POIUSERNAME/g" $BASE/tmp/$JKLHOSTT1RANDOM
	sed -i -e "s/THEHOST_1UPWD/$MNBPWD/g" $BASE/tmp/$JKLHOSTT1RANDOM
	sed -i -e "s/STACK_1MAPPING/$VBNVER/g" $BASE/tmp/$JKLHOSTT1RANDOM
	sed -i -e "s#THEFILE_1NAME#$GHJCONFIGFILE#g" $BASE/tmp/$JKLHOSTT1RANDOM
			
	cat $BASE/tmp/$JKLHOSTT1RANDOM >> $PQRTHEDYNA1SCRIPTFILE
	
	sudo rm -rf $BASE/tmp/$JKLHOSTT1RANDOM
}

