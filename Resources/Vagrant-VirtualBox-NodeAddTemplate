#!/bin/bash

clear

CURRENTUSER=$(whoami)
sudo rm -rf /home/$CURRENTUSER/.ssh/known_hosts
sudo rm -rf /root/.ssh/known_hosts

RED='\033[0;31m'
NC='\033[0m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
LBLUE='\033[1;34m'
DGRAY='\033[1;35m'
PURPLE='\033[0;35m'
RGRAY='\033[1;30m'
BOLD=$(tput bold)
NORM=$(tput sgr0)
ORANGE='\033[1;33m'

USERINTERACTION="YES"
USERVALS=""

BASE="CLUSTERADDTHEBASE"
CLUSTERNAME="CLUSTERADDTHECLUSTERNAME"
CONFIRMPROCEED="CLUSTERADDTHECONFIRMPROCEED"
DEFAULTCONFIG="CLUSTERADDTHEDEFAULTCONFIG"
LANTYPE="CLUSTERADDTHELANTYPE"
NIC="CLUSTERADDTHENIC"
GATEWAY="CLUSTERADDTHEGATEWAY"
NETMASK="CLUSTERADDTHENETMASK"
BASEIP="GETTHATIPPART"
COORDINATOR="CLUSTERADDTHECOORDINATOR"
RANDOMSSHPORT="CLUSTERADDTHERANDOMSSHPORT"
ADDTOHOSTSFILE="CLUSTERADDTHEADDTOHOSTSFILE"
NODESNUMBER=""
DEFAULTCONFIG=""
FILEMOUNTOPTION=""
REALFILEMOUNT=""
STARTRANDOMIP=""
VAGRANTPWD=""
ROOTPWD=""

if [ "$#" -ne 1 ]; then
	USERVALS=""
else
	USERVALS=$1
	USERINTERACTION="NO"
	IFS='├' read -r -a USERLISTVALS <<< $USERVALS
	NODESNUMBER="${USERLISTVALS[0]}"
	DEFAULTCONFIG="${USERLISTVALS[1]}"
	FILEMOUNTOPTION="${USERLISTVALS[2]}"
	REALFILEMOUNT="${USERLISTVALS[3]}"
	STARTRANDOMIP="${USERLISTVALS[4]}"
	VAGRANTPWD="${USERLISTVALS[5]}"
	ROOTPWD="${USERLISTVALS[6]}"	
fi

echo -e "${ORANGE}==========================================================${NC}"
echo -e "${BLUE}${BOLD}\x1b[4mM${NORM}${NC}odular ${BLUE}${BOLD}\x1b[4mA${NORM}${NC}malgamation ${BLUE}${BOLD}\x1b[4mT${NORM}${NC}ransforming ${BLUE}${BOLD}\x1b[4mS${NORM}${NC}ystems ${BLUE}${BOLD}\x1b[4mY${NORM}${NC}ielding ${BLUE}${BOLD}\x1b[4mA${NORM}${NC}gility"
echo -e "${GREEN}==========================================================${NC}"
echo ''
echo -e "\x1b[3mM   M  AAAAA  TTTTT  SSS   Y   Y  AAAAA\x1b[m"
echo -e "\x1b[3mMM MM  A   A    T   S        Y    A   A\x1b[m"
echo -e "\x1b[3mM M M  AAAAA    T    SSS     Y    AAAAA\x1b[m"
echo -e "\x1b[3mM   M  A   A    T       S    Y    A   A\x1b[m"
echo -e "\x1b[3mM   M  A   A    T   SSSS     Y    A   A\x1b[m"
echo ''
echo -e "\x1b[3m\x1b[4mVAGRANT VIRTUALBOX\x1b[m"" [""${PURPLE}${BOLD}\x1b[3m\x1b[4m$CLUSTERNAME\x1b[m${NORM}${NC}""]"
echo ''
echo "-------------------------------"
echo -e "${BOLD}NODES AVAILABLE${NORM}"
echo "-------------------------------"
COUNTERe=1
for Config in $BASE/VagVBox/$CLUSTERNAME/Configs/*; do
	if [ -d "$Config" ]; then
		Config=${Config//$BASE/}
		Config=${Config//VagVBox/}
		Config=${Config//$CLUSTERNAME/}
		Config=${Config//Configs/}
		Config=${Config//matsya-vagvbox-sa/}
		Config=${Config//\//}
		Config=${Config//-/.}
		Config=${Config//../}
		if [ $Config == "$COORDINATOR" ] || [ $Config == "$COORDINATOR" ] ; then
			echo "($COUNTERe) $Config (Coordinator)"
		else
			echo "($COUNTERe) $Config"
		fi 				
		COUNTERe=$((COUNTERe + 1))    	
	fi
done
echo "-------------------------------"
sudo mkdir -p $BASE/VagVBox
sudo mkdir -p $BASE/Repo
ISFA="$BASE/Repo/Stack/Bundle/KLM15_v1_1_1.box"
VBOXCHOICE="AUTO"
if [ -f "$ISFA" ]
then
	VBOXCHOICE="MANUAL"
else
	echo "
==============================================================================

*Vagrant VirtualBox Missing...
--------
*Download From Here => https://bit.ly/Minus1by12MatsyaPlatform
   * Copy To $BASE/Repo/Stack/Bundle  

==============================================================================
"
	exit
fi
echo ""
IP_ADDRESS_LIST=()
if [ $CONFIRMPROCEED == "c" ] || [ $CONFIRMPROCEED == "C" ] ; then
	echo "=============================================================================="
	echo ''
	if [ "$USERINTERACTION" == "YES" ] || [ "$USERINTERACTION" == "yes" ] ; then
		read -p "Enter No Of Nodes > " -e -i "1" NODESNUMBER
		echo ''
		read -p "Enter Default Config (RAM {1024*n eg: 3GB RAM = 1024*3}, CORES, DISK SIZE {GB}) > " -e -i "$DEFAULTCONFIG" DEFAULTCONFIG
		echo ''	
		read -p "File Mount (*Local OR *Custom) l/c > " -e -i "l" FILEMOUNTOPTION
		echo ''	
	fi
	
	if [ $FILEMOUNTOPTION == "c" ] || [ $FILEMOUNTOPTION == "C" ] ; then
		if [ "$USERINTERACTION" == "YES" ] || [ "$USERINTERACTION" == "yes" ] ; then
			read -p "Enter Mount Location(s) > " -e -i "$BASE/mounts/$CLUSTERNAME/disk1" REALFILEMOUNT
			echo ''
		fi
	fi	
	DIFF=$((230-190+1))
	R=$(($(($RANDOM%$DIFF))+190))
	if [ "$USERINTERACTION" == "YES" ] || [ "$USERINTERACTION" == "yes" ] ; then
		read -p "Random Starting IP > $BASEIP" -e -i "$R" STARTRANDOMIP
		echo ''
		read -s -p "Enter Password For User => vagrant > " -e -i "" VAGRANTPWD
		echo ''
		read -s -p "Enter Password For User => root > " -e -i "" ROOTPWD
		echo ''
		echo ''
	fi
	WHENJOBBEGAN=$(echo $(date +%H):$(date +%M))
	MATSYAPWD=$(sudo ssh vagrant@$COORDINATOR -p $RANDOMSSHPORT  -o "StrictHostKeyChecking=no" -i "$BASE/op-$CLUSTERNAME.pem" "sudo cat /usr/bin/.mtsypswd")				
	echo '-----------------------'
	echo 'NODES (IP & HOSTNAME)'
	echo '-----------------------'
	SERIESSTART=$(echo "$(($STARTRANDOMIP + 0))")
	SERIESEND=$(echo "$(($STARTRANDOMIP + $NODESNUMBER))")
	SSHBYCOORDINATOR="echo '-----------------------' && "
	COUNTERx=0	
	for ((i = SERIESSTART; i < SERIESEND; i++))
	do 
		NEWIPADDR="${BASEIP}${i}"
		if [ "$REALFILEMOUNT" == "null" ] || [ "$REALFILEMOUNT" = "" ] ; then		
			IP_ADDRESS_LIST+=("$NEWIPADDR¬$BASE/VagVBox/$CLUSTERNAME/VM")
		else
			IFS=',' read -r -a ARRAYFILEMOUNT <<< $REALFILEMOUNT
			ARRAYLENFILEMOUNT=${#ARRAYFILEMOUNT[@]}
			ARRAYLENFILEMOUNT=$((ARRAYLENFILEMOUNT - 1))
			if (( $COUNTERx > $ARRAYLENFILEMOUNT )) ; then
				IP_ADDRESS_LIST+=("$NEWIPADDR¬$BASE/VagVBox/$CLUSTERNAME/VM")
			else
				IP_ADDRESS_LIST+=("$NEWIPADDR¬""${ARRAYFILEMOUNT[$COUNTERx]}")
			fi
		fi		
		IP_ADDRESS_HYPHEN=${NEWIPADDR//./-}
		echo "$NEWIPADDR	op-$CLUSTERNAME-$IP_ADDRESS_HYPHEN-vvb"
		sudo mkdir -p $BASE/VagVBox/$CLUSTERNAME/Configs/op-$CLUSTERNAME-$IP_ADDRESS_HYPHEN
		SSHBYCOORDINATOR+="sudo sshpass -p \"$MATSYAPWD\" ssh-copy-id -i /home/vagrant/.ssh/id_rsa.pub -o StrictHostKeyChecking=no -o IdentitiesOnly=yes matsya@$NEWIPADDR && "
		COUNTERx=$((COUNTERx + 1))
	done
	SSHBYCOORDINATOR+="echo '-----------------------'"
	echo '-----------------------'			
	echo "127.0.0.1   localhost localhost-vvbdomain localhost4 localhost4-vvbdomain4
::1         localhost localhost-vvbdomain localhost6 localhost6-vvbdomain6
" | sudo tee $BASE/VagVBox/$CLUSTERNAME/Configs/hosts > /dev/null	
	if [ $ADDTOHOSTSFILE == "y" ] || [ $ADDTOHOSTSFILE == "Y" ] ; then
		for ((i = SERIESSTART; i < SERIESEND; i++))
		do 
			NEWIPADDR="${BASEIP}${i}"
			IP_ADDRESS_HYPHEN2=${NEWIPADDR//./-}
			sudo -H -u root bash -c "sed -i -e s~\"$NEWIPADDR\"~\"#$NEWIPADDR\"~g /etc/hosts"
			sudo -H -u root bash -c "echo \"$NEWIPADDR	op-$CLUSTERNAME-$IP_ADDRESS_HYPHEN2-vvb\" >> /etc/hosts"
			echo "sudo sed -i -e s~\"$NEWIPADDR\"~\"#$NEWIPADDR\"~g /etc/hosts" | sudo tee -a $BASE/op-$CLUSTERNAME-kill.sh > /dev/null
			echo "$NEWIPADDR	op-$CLUSTERNAME-$IP_ADDRESS_HYPHEN2-vvb" | sudo tee -a $BASE/VagVBox/$CLUSTERNAME/Configs/hosts > /dev/null			
		done											
	fi		
	COUNTER=0		
	for IP_ADDRESS_VALS_LIST in "${IP_ADDRESS_LIST[@]}"
	do
		IFS='¬' read -r -a IP_ADDRESS_VALS_LISTVals <<< $IP_ADDRESS_VALS_LIST
		VMIP="${IP_ADDRESS_VALS_LISTVals[0]}"
		THEFILEMOUNTLOCATION="${IP_ADDRESS_VALS_LISTVals[1]}"
		IP_ADDRESS_HYPHEN3=${VMIP//./-}
		NAMEOFTHECLUSTERBOX="$CLUSTERNAME"
		CLUSTERBOXURL="https://bit.ly/MatsyaKLM15VagVBox"
		if [ $VBOXCHOICE == "MANUAL" ] || [ $VBOXCHOICE == "MANUAL" ] ; then
			CLUSTERBOXURL="$BASE/Repo/Stack/Bundle/KLM15_v1_1_1.box"	
		fi
		IFS=','
		read -ra DEFCONFG <<< "$DEFAULTCONFIG"
		DEFCONFGMEM=$(echo "${DEFCONFG[0]}")
		DEFCONFGCORES=$(echo "${DEFCONFG[1]}")
		ORIGINALSIZEOFDISK=$(echo "${DEFCONFG[2]}")
		NEWSIZEOFDISK=$((22 + ORIGINALSIZEOFDISK + 17))				
		DEFCONFGDISKSIZE=$(echo "$NEWSIZEOFDISK""GB")
		VMNETWORKADDRESS="config.vm.network \"private_network\", ip: \"$VMIP\""
		if [ $LANTYPE == "c" ] || [ $LANTYPE == "C" ] ; then
			VMNETWORKADDRESS="config.vm.network \"public_network\", bridge: \"$NIC\", ip: \"$VMIP\""	
		fi
		THENAMEOFVBBOX="op-$CLUSTERNAME-$IP_ADDRESS_HYPHEN3"
		THENAMETOSHOWONSCREEN="$VMIP"			    
	    	echo "Vagrant.configure(\"2\") do |config|
  unless Vagrant.has_plugin?(\"vagrant-disksize\")
    raise  Vagrant::Errors::VagrantError.new, \"vagrant-disksize Plugin Missing.Run 'sudo vagrant plugin install vagrant-disksize' & Restart\"
  end 
   
  config.vm.box = \"$NAMEOFTHECLUSTERBOX\"

  config.vm.box_url = \"$CLUSTERBOXURL\"
  config.vm.provider :virtualbox do |vb|
      vb.name = \"$THENAMEOFVBBOX\"
  end
  
  #config.ssh.private_key_path = \"$BASE/op-$CLUSTERNAME.pem\"
  
  #config.ssh.port = $RANDOMSSHPORT
  
  #config.ssh.host = \"$VMIP\"
  
  config.vm.synced_folder '.', '/vagrant', disabled: true
  
  $VMNETWORKADDRESS  

  config.disksize.size = '$DEFCONFGDISKSIZE'
  
  config.vm.provider \"virtualbox\" do |vb|
     vb.memory = \"$DEFCONFGMEM\"
     vb.cpus = \"$DEFCONFGCORES\"
  end

  if Vagrant.has_plugin?(\"vagrant-vbguest\")
    config.vbguest.auto_update = false  
  end
  
end" | sudo tee $BASE/VagVBox/$CLUSTERNAME/Configs/op-$CLUSTERNAME-$IP_ADDRESS_HYPHEN3/Vagrantfile > /dev/null
		echo ''
		echo '-----------------------'
		echo "$THENAMETOSHOWONSCREEN"
		echo '-----------------------'
		sudo -H -u root bash -c "pushd $BASE/VagVBox/$CLUSTERNAME/Configs/op-$CLUSTERNAME-$IP_ADDRESS_HYPHEN3 && sudo vboxmanage setproperty machinefolder $THEFILEMOUNTLOCATION && sudo vagrant up && sudo vboxmanage setproperty machinefolder default && popd"
		FINALPOINTTODISKSIZE=$((ORIGINALSIZEOFDISK + 22))
		THECOMMAND=$(echo 'number="3" && sudo parted --script /dev/sda mkpart primary ext4 22GB '"$FINALPOINTTODISKSIZE"'GB && sudo partprobe /dev/sda && sudo mkfs -F -t ext4 /dev/sda$number && sudo mkfs -F /dev/sda$number -t ext4 && sudo tune2fs -m 0 /dev/sda$number && sdauuid=$(sudo blkid -s UUID -o value /dev/sda$number) && sudo mkdir -p /mnt/MatsyaHDD && sudo mkdir -p /opt/java/Open && sudo mkdir -p /usr/java && sudo mkdir -p /usr/share/java && sudo e2label /dev/sda$number MatsyaHDD && echo "UUID=$sdauuid  /mnt/MatsyaHDD ext4 defaults 0 3" | sudo tee -a /etc/fstab > /dev/null && echo "----------------------------------------------------------------------------------------------" && sudo cat /etc/fstab && echo "----------------------------------------------------------------------------------------------" && lsblk -o name,mountpoint,label,size,fstype,uuid && echo "----------------------------------------------------------------------------------------------" && sudo parted -ls && echo "----------------------------------------------------------------------------------------------"')
		sudo ssh vagrant@$VMIP -p 22  -o "StrictHostKeyChecking=no" -i "$BASE/VagVBox/$CLUSTERNAME/Configs/op-$CLUSTERNAME-$IP_ADDRESS_HYPHEN3/.vagrant/machines/default/virtualbox/private_key" "$THECOMMAND"
		THECOMMAND2=$(echo 'sudo mkdir -p /mnt/MatsyaHDD && sudo mkdir -p /opt/java/Open && sudo mkdir -p /usr/java && sudo mkdir -p /usr/share/java && echo "'"Matsya"'" | sudo tee /usr/bin/.mtsypswd > /dev/null && sudo chmod u=r,g=,o= /usr/bin/.mtsypswd && sudo rm -rf /etc/hostname && echo "'"op-$CLUSTERNAME-$IP_ADDRESS_HYPHEN3-vvb"'" | sudo tee /etc/hostname')
		sudo ssh vagrant@$VMIP -p 22  -o "StrictHostKeyChecking=no" -i "$BASE/VagVBox/$CLUSTERNAME/Configs/op-$CLUSTERNAME-$IP_ADDRESS_HYPHEN3/.vagrant/machines/default/virtualbox/private_key" "$THECOMMAND2"						
		sudo cat $BASE/VagVBox/$CLUSTERNAME/Keys/id_rsa.pub | sudo ssh vagrant@$VMIP -p 22  -o "StrictHostKeyChecking=no" -i "$BASE/VagVBox/$CLUSTERNAME/Configs/op-$CLUSTERNAME-$IP_ADDRESS_HYPHEN3/.vagrant/machines/default/virtualbox/private_key" 'cat >> $HOME/.ssh/authorized_keys'
		sudo -H -u root bash -c "pushd $BASE/VagVBox/$CLUSTERNAME/Configs/op-$CLUSTERNAME-$IP_ADDRESS_HYPHEN3 && sudo vagrant halt && sed -i 's/#config.ssh.private_key_path/config.ssh.private_key_path/' Vagrantfile && popd"
		sudo rm -rf $BASE/VagVBox/$CLUSTERNAME/Configs/op-$CLUSTERNAME-$IP_ADDRESS_HYPHEN3/.vagrant/machines/default/virtualbox/private_key
		sudo -H -u root bash -c "pushd $BASE/VagVBox/$CLUSTERNAME/Configs/op-$CLUSTERNAME-$IP_ADDRESS_HYPHEN3 && sudo vagrant up && popd"
		sudo ssh vagrant@$VMIP -p 22  -o "StrictHostKeyChecking=no" -i "$BASE/op-$CLUSTERNAME.pem" "echo '$ROOTPWD' | sudo passwd --stdin 'root'"				
		sudo ssh vagrant@$VMIP -p 22  -o "StrictHostKeyChecking=no" -i "$BASE/op-$CLUSTERNAME.pem" "echo '$VAGRANTPWD' | sudo passwd --stdin 'vagrant'"		
		sudo ssh vagrant@$VMIP -p 22  -o "StrictHostKeyChecking=no" -i "$BASE/op-$CLUSTERNAME.pem" "echo '$MATSYAPWD' | sudo passwd --stdin 'matsya'"
		sudo ssh vagrant@$VMIP -p 22  -o "StrictHostKeyChecking=no" -i "$BASE/op-$CLUSTERNAME.pem" 'sudo sed -i "s/PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config && sudo systemctl restart sshd.service'
		SSHRELATEDRPMS="$BASE/Repo/policycoreutils-python.7z"
		THEHOSTSFILE="$BASE/VagVBox/$CLUSTERNAME/Configs/hosts"
		sudo sshpass -p "$VAGRANTPWD" scp $THEHOSTSFILE vagrant@$VMIP:/home/vagrant
		sudo ssh vagrant@$VMIP -p 22  -o "StrictHostKeyChecking=no" -i "$BASE/op-$CLUSTERNAME.pem" "sudo rm -f /etc/hosts && sudo mv /home/vagrant/hosts /etc"
		sudo sshpass -p "$VAGRANTPWD" scp $SSHRELATEDRPMS vagrant@$VMIP:/home/vagrant
		sudo ssh vagrant@$VMIP -p 22  -o "StrictHostKeyChecking=no" -i "$BASE/op-$CLUSTERNAME.pem" "sudo rm -rf /usr/bin/.mtsypswd"
		sudo -H -u root bash -c "pushd $BASE/VagVBox/$CLUSTERNAME/Configs/op-$CLUSTERNAME-$IP_ADDRESS_HYPHEN3 && sed -i 's/#config.ssh.port/config.ssh.port/' Vagrantfile && sed -i 's/#config.ssh.host/config.ssh.host/' Vagrantfile && popd"								
		echo '-----------------------'
		COUNTER=$((COUNTER + 1))
	done
	sudo ssh vagrant@$COORDINATOR -p $RANDOMSSHPORT  -o "StrictHostKeyChecking=no" -i "$BASE/op-$CLUSTERNAME.pem" "$SSHBYCOORDINATOR"	
	for IP_ADDRESS_VALS_LIST in "${IP_ADDRESS_LIST[@]}"
	do
		IFS='¬' read -r -a IP_ADDRESS_VALS_LISTVals <<< $IP_ADDRESS_VALS_LIST
		VMIP="${IP_ADDRESS_VALS_LISTVals[0]}"
		THEFILEMOUNTLOCATION="${IP_ADDRESS_VALS_LISTVals[1]}"
		sudo ssh vagrant@$VMIP -p 22  -o "StrictHostKeyChecking=no" -i "$BASE/op-$CLUSTERNAME.pem" "sudo rm -rf policycoreutils-python && sudo 7z x policycoreutils-python.7z -o. && sudo yum install -y policycoreutils-python/lsof-4.87-6.el7.x86_64.rpm && sudo rm -rf policycoreutils-python && sudo rm -rf policycoreutils-python.7z"
		sudo ssh vagrant@$VMIP -p 22  -o "StrictHostKeyChecking=no" -i "$BASE/op-$CLUSTERNAME.pem" "SSHPORT=\"$RANDOMSSHPORT\" && sudo systemctl start firewalld && sudo systemctl enable firewalld && sudo sed -i -e s~\"Port\"~\"#Port\"~g /etc/ssh/sshd_config && echo \"Port \$SSHPORT\" | sudo tee -a /etc/ssh/sshd_config > /dev/null && sudo firewall-cmd --permanent --zone=public --add-port=\$SSHPORT/tcp && sudo firewall-cmd --reload && sudo systemctl restart sshd.service && echo '-----' && sudo lsof -nP -iTCP -sTCP:LISTEN | grep \"COMMAND\|IPv4\" && echo '-----' && sudo netstat -tnlp | grep -v tcp6 && echo '-----' && sudo route del default gw 10.0.2.2 && sudo route add default gw $GATEWAY"		
	done
	sudo rm -rf $BASE/VagVBox/$CLUSTERNAME/hosts
	echo "127.0.0.1	localhost localhost-vvbdomain localhost4 localhost4-vvbdomain4
	::1	localhost localhost-vvbdomain localhost6 localhost6-vvbdomain6
	" | sudo tee $BASE/VagVBox/$CLUSTERNAME/hosts > /dev/null
	for Config in $BASE/VagVBox/$CLUSTERNAME/Configs/*; do
	    if [ -d "$Config" ]; then
	    	Config=${Config//$BASE/}
	    	Config=${Config//VagVBox/}
	    	Config=${Config//$CLUSTERNAME/}
	    	Config=${Config//Configs/}
	    	Config=${Config//matsya-vagvbox-sa/}
	    	Config=${Config//\//}
	    	Config=${Config//-/.}
	    	Config=${Config//../}
	    	IP_ADDRESS_HYPHENz=${Config//./-}
	    	echo "$Config	op-$CLUSTERNAME-$IP_ADDRESS_HYPHENz-vvb" | sudo tee -a $BASE/VagVBox/$CLUSTERNAME/hosts > /dev/null    	
	    fi
	done
	echo ""
	sudo $BASE/op-$CLUSTERNAME-push.sh I $VAGRANTPWD $BASE/VagVBox/$CLUSTERNAME/hosts
	sudo rm -rf $BASE/VagVBox/$CLUSTERNAME/hosts
	sudo mv $BASE/op-$CLUSTERNAME-exec $BASE/op-$CLUSTERNAME-execbckup
	sudo touch $BASE/op-$CLUSTERNAME-exec
	echo "sudo rm -f /etc/hosts && sudo mv /home/vagrant/hosts /etc" | sudo tee -a $BASE/op-$CLUSTERNAME-exec > /dev/null
	sudo $BASE/op-$CLUSTERNAME-exec.sh I $VAGRANTPWD
	sudo rm -rf $BASE/op-$CLUSTERNAME-exec
	sudo mv $BASE/op-$CLUSTERNAME-execbckup $BASE/op-$CLUSTERNAME-exec
	sudo rm -rf $BASE/VagVBox/$CLUSTERNAME/Configs/hosts
	WHENJOBFIN=$(echo $(date +%H):$(date +%M))
	SEC1=`date +%s -d ${WHENJOBBEGAN}`
	SEC2=`date +%s -d ${WHENJOBFIN}`
	DIFFSEC=`expr ${SEC2} - ${SEC1}`
	THETOTALTIMETAKEN=$(echo `date +%M -ud @${DIFFSEC}`)
	echo "Total Time Taken => $THETOTALTIMETAKEN Minutes"	
	echo ''							 			
	echo "=============================================================================="
	echo ''
else
	echo "Exiting For Now..."
	echo ''
	exit
fi			

