version: '3.7'
 
services:
  cloudcmd:
    image: FL_BR_VAL_1
    volumes: 
      - FL_BR_VAL_2:/root/fs/SBS
      - FL_BR_VAL_3:/root/fs/CLOUD          
    environment:
      - CLOUDCMD_AUTH=true
      - CLOUDCMD_USERNAME=admin
      - CLOUDCMD_PASSWORD=FL_BR_VAL_4
      - CLOUDCMD_ROOT=/root/fs      
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.STACKNAMEBRAHMAreplica == true
          - node.role == manager
      resources:
        limits:
          cpus: 'FL_BR_VAL_5'
          memory: 'FL_BR_VAL_6M'
    ports:
      - "FL_BR_VAL_7:8000"
    networks:
      - STACKNAME-encrypted-overlay

  minio:
    image: MIN_IO_VAL_1
    entrypoint: /usr/local/bin/EntryPoint.sh
    volumes:
      - MIN_IO_VAL_2:/data
      - MIN_IO_VAL_3:/usr/local/bin/EntryPoint.sh
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: MIN_IO_VAL_4
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.STACKNAMEBRAHMAreplica == true
          - node.role == manager
      resources:
        limits:
          cpus: 'MIN_IO_VAL_5'
          memory: 'MIN_IO_VAL_6M'
    ports:
      - "MIN_IO_VAL_7:9000"
      - "MIN_IO_VAL_8:9001"
    networks:
      - STACKNAME-encrypted-overlay
      
  agent:
    image: WRKR1VER:WRKRVER
    ports:
      - "PortainerAPort:9001"
    environment:
      - AGENT_SECRET=REVERSED_PASSWORD
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock 
    networks:
      - STACKNAME-encrypted-overlay
    deploy:
      mode: global
      resources:
        limits:
          cpus: 'C2ORE'
          memory: 'R2AMM'
                  
  portainer:
    image: MGR1VER:MGRVER
    ports:
      - "PortainerSPort:9443"
    environment:
      - AGENT_PORT=PortainerAPort
      - AGENT_SECRET=REVERSED_PASSWORD
      - ANALYTICS=0      
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.STACKNAMEBRAHMAreplica == true
          - node.role == manager
      resources:
        limits:
          cpus: 'C1ORE'
          memory: 'R1AMM'
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock 
      - type: bind
        source: DOCKER_VOLUME_NAME
        target: /data
      - type: bind
        source: CERTS_DIR/docker/STACKNAME.pem
        target: /certs/sca.pem
        read_only: true
      - type: bind
        source: CERTS_DIR/docker/STACKNAME-server-cert.pem
        target: /certs/scert.pem
        read_only: true
      - type: bind
        source: CERTS_DIR/docker/STACKNAME-server-key.pem
        target: /certs/skey.pem 
        read_only: true                       
    command: -H tcp://tasks.agent:PortainerAPort --ssl --sslcert /certs/scert.pem --sslkey /certs/skey.pem --logo "https://INDRANAME:INDRAPORT/LogoSTACKNAME.png"
    networks:
      - STACKNAME-encrypted-overlay    
    cap_add:
      - ALL
   
networks:
  STACKNAME-encrypted-overlay:
    external: true
              
